# Generated by Django 5.1.2 on 2024-10-27 17:40

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('vin', models.CharField(max_length=17, primary_key=True, serialize=False)),
                ('model', models.CharField(max_length=30)),
                ('number_plate', models.CharField(max_length=12)),
                ('year_of_manufacture', models.IntegerField()),
                ('number_of_seats', models.PositiveSmallIntegerField()),
                ('fuel_type', models.CharField(max_length=30, null=True)),
                ('resource', models.IntegerField()),
                ('mileage', models.PositiveSmallIntegerField()),
                ('decommissioned', models.BooleanField(default=False, null=True)),
            ],
            options={
                'db_table': 'Vehicle',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('type', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('max_allowed_speed', models.PositiveSmallIntegerField(default=70, null=True)),
            ],
            options={
                'db_table': 'Vehicle_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('driver_id', models.AutoField(primary_key=True, serialize=False)),
                ('lastname', models.CharField(max_length=30)),
                ('firstname', models.CharField(max_length=30)),
                ('patronymic', models.CharField(max_length=30, null=True)),
                ('passport', models.CharField(max_length=12)),
                ('birthday', models.DateField()),
                ('date_of_employment', models.DateField()),
                ('drivers_license', models.CharField(max_length=12)),
                ('drivers_license_category', models.CharField(max_length=30)),
                ('date_of_issue_license', models.DateField()),
            ],
            options={
                'db_table': 'Driver',
                'managed': True,
                'unique_together': {('lastname', 'firstname', 'passport', 'birthday')},
            },
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('pass_id', models.AutoField(primary_key=True, serialize=False)),
                ('lastname', models.CharField(max_length=30)),
                ('firstname', models.CharField(max_length=30)),
                ('patronymic', models.CharField(max_length=30, null=True)),
                ('passport', models.CharField(max_length=12)),
                ('birthday', models.DateField()),
            ],
            options={
                'db_table': 'Passenger',
                'managed': True,
                'unique_together': {('lastname', 'firstname', 'passport', 'birthday')},
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('route_id', models.AutoField(primary_key=True, serialize=False)),
                ('depart', models.CharField(max_length=30)),
                ('arrive', models.CharField(max_length=30)),
                ('distance', models.PositiveSmallIntegerField()),
                ('trip_time', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(message='', regex='(?:\\d\\d?\\s(?:days?)\\s)?\\b[0-2]?[0-9]:[0-5][0-9]\\b')])),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'Route',
                'managed': True,
                'unique_together': {('depart', 'arrive', 'distance')},
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('schedule_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_depart', models.DateField()),
                ('time_depart', models.TimeField()),
                ('tickets_avaliable', models.IntegerField()),
                ('driver_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='devdb2024.driver')),
                ('route_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='devdb2024.route')),
                ('vin', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='devdb2024.vehicle')),
            ],
            options={
                'db_table': 'Schedule',
                'managed': True,
                'unique_together': {('vin', 'date_depart', 'time_depart')},
            },
        ),
        migrations.AddField(
            model_name='vehicle',
            name='type',
            field=models.ForeignKey(db_column='type', default='not set', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='devdb2024.vehicletype'),
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('ticked_id', models.AutoField(primary_key=True, serialize=False)),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=7)),
                ('place_number', models.PositiveSmallIntegerField(null=True)),
                ('pass_field', models.ForeignKey(db_column='pass_id', on_delete=django.db.models.deletion.DO_NOTHING, to='devdb2024.passenger')),
                ('schedule_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='devdb2024.schedule')),
            ],
            options={
                'db_table': 'Ticket',
                'managed': True,
                'unique_together': {('schedule_id', 'pass_field')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='vehicle',
            unique_together={('model', 'number_plate', 'year_of_manufacture')},
        ),
    ]
